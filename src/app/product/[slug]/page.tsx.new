"use client";

import { useState } from "react";
import { useParams } from "next/navigation";
import Image from "next/image";
import Link from "next/link";
import { ChevronLeft, Heart, Share2, Check } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Badge } from "@/components/ui/badge";
import { useCart } from "@/context/CartContext";
import seedData from "@/data/seed-data.json";
import ProductCard from "@/components/ProductCard";
import { formatCurrency } from "@/utils/formatters";

export default function ProductDetail() {
  const params = useParams();
  const slug = params.slug as string;
  const { addToCart } = useCart();
  const [selectedImageIndex, setSelectedImageIndex] = useState(0);

  const product = seedData.products.find(p => p.slug === slug);

  if (!product) {
    return <div>Product not found</div>;
  }

  // Filter related products (same category, excluding current product)
  const relatedProducts = seedData.products
    .filter(p => p.category === product.category && p.id !== product.id)
    .slice(0, 3);

  return (
    <div className="min-h-screen bg-background">
      {/* Product Section */}
      <section className="container mx-auto px-4 py-8">
        <Link
          href="/catalog"
          className="inline-flex items-center text-muted-foreground hover:text-foreground mb-8"
        >
          <ChevronLeft className="h-4 w-4 mr-1" />
          Back to Catalog
        </Link>

        <div className="grid lg:grid-cols-2 gap-12">
          {/* Product Images */}
          <div className="space-y-4">
            <div className="relative aspect-square bg-secondary/20 rounded-2xl overflow-hidden">
              <Image
                src={product.images[selectedImageIndex]}
                alt={product.title}
                fill
                className="object-cover"
              />
            </div>

            {/* Thumbnail Navigation */}
            {product.images.length > 1 && (
              <div className="flex gap-4">
                {product.images.map((image, index) => (
                  <button
                    key={index}
                    onClick={() => setSelectedImageIndex(index)}
                    className={`relative aspect-square w-20 rounded-lg overflow-hidden ${
                      selectedImageIndex === index
                        ? "ring-2 ring-primary"
                        : "ring-1 ring-border"
                    }`}
                  >
                    <Image
                      src={image}
                      alt={`${product.title} view ${index + 1}`}
                      fill
                      className="object-cover"
                    />
                  </button>
                ))}
              </div>
            )}
          </div>

          {/* Product Info */}
          <div className="space-y-6">
            <div>
              <h1 className="section-title text-foreground mb-4">
                {product.title}
              </h1>
              <p className="text-xl text-muted-foreground">
                {product.shortDescription}
              </p>
            </div>

            <div className="flex items-baseline space-x-2">
              <span className="text-sm text-muted-foreground">From</span>
              <span className="text-3xl font-bold text-primary">
                {formatCurrency(product.priceEstimateMin)}
              </span>
              {product.priceEstimateMax > product.priceEstimateMin && (
                <span className="text-lg text-muted-foreground">
                  - {formatCurrency(product.priceEstimateMax)}
                </span>
              )}
            </div>

            <div className="flex gap-3">
              <Button 
                onClick={() => addToCart({
                  id: product.id,
                  title: product.title,
                  image: product.images[0],
                  price: product.priceEstimateMin,
                  slug: product.slug,
                  quantity: 1
                })}
                className="flex-1 btn-premium" 
                size="lg"
              >
                Add to Cart
              </Button>
              <Button variant="outline" size="lg">
                <Heart className="h-5 w-5" />
              </Button>
              <Button variant="outline" size="lg">
                <Share2 className="h-5 w-5" />
              </Button>
            </div>

            {/* Product Details */}
            <Tabs defaultValue="description" className="pt-6">
              <TabsList>
                <TabsTrigger value="description">Description</TabsTrigger>
                <TabsTrigger value="details">Details</TabsTrigger>
                <TabsTrigger value="materials">Materials</TabsTrigger>
              </TabsList>
              <TabsContent value="description" className="pt-4">
                <p className="text-muted-foreground leading-relaxed">
                  {product.longDescription}
                </p>
              </TabsContent>
              <TabsContent value="details" className="pt-4">
                <div className="space-y-4">
                  <div>
                    <h4 className="font-medium mb-2">Dimensions</h4>
                    <p className="text-muted-foreground">
                      W: {product.dimensions.w}cm x H: {product.dimensions.h}cm x D:{" "}
                      {product.dimensions.d}cm
                    </p>
                  </div>
                  <div>
                    <h4 className="font-medium mb-2">Lead Time</h4>
                    <p className="text-muted-foreground">
                      {product.leadTimeDays} days
                    </p>
                  </div>
                  {product.isCustomAllowed && (
                    <div>
                      <h4 className="font-medium mb-2 flex items-center">
                        <Check className="h-4 w-4 mr-2 text-primary" />
                        Customization Available
                      </h4>
                      <p className="text-muted-foreground">
                        This piece can be customized to your preferences. Contact us
                        to discuss custom options.
                      </p>
                    </div>
                  )}
                </div>
              </TabsContent>
              <TabsContent value="materials" className="pt-4">
                <ul className="space-y-2">
                  {product.materials.map((material, index) => (
                    <li
                      key={index}
                      className="text-muted-foreground flex items-center"
                    >
                      <Check className="h-4 w-4 mr-2 text-primary" />
                      {material}
                    </li>
                  ))}
                </ul>
              </TabsContent>
            </Tabs>

            {/* Features */}
            <div className="flex flex-wrap gap-2">
              {product.tags.map((tag) => (
                <Badge key={tag} variant="secondary">
                  {tag}
                </Badge>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Related Products */}
      <section className="bg-secondary/20 py-16">
        <div className="container mx-auto px-4">
          <h2 className="section-title text-foreground mb-8">
            Related Products
          </h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {relatedProducts.map((relatedProduct) => (
              <ProductCard key={relatedProduct.id} {...relatedProduct} />
            ))}
          </div>
        </div>
      </section>
    </div>
  );
}
